server:
  port: 9190

redis:
  captcha:
    prefix: 'baseApi:captcha:'
    expire: 1  # 验证码过期时间，单位分钟
  token:
    prefix: 'baseApi:token:'
    expire: 600  # token有效时长，单位分钟
    enable: true # 校验token开关，true开启token
    secret: BaseApi  #密匙
  system_constant:
    prefix: 'baseApi:system_constant:'


#七牛云配置，配置：https://portal.qiniu.com/kodo/bucket
oss:
  access_key:
  secret_key:
  bucket:
  url:

qq:
  # qq第三方登录配置，配置：https://wiki.connect.qq.com/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C_oauth2-0
  login:
    access_token_url:
    client_id:
    client_secret:
    grant_type:
    redirect_uri:
    open_id_url:

ali:
  # 阿里第三方登录,配置：https://openhome.alipay.com/svr/ability/SM010000000000001010/USERINFO_SHARE/manage
  login:
    app_private_key:
    alipay_public_key:
    app_id:
    server_url:

# 推送配置
push:
  # 配置网址：https://wxpusher.zjiecode.com/admin/login
  wxpusher:
    app_token:
    app_key:
    url:
  # 配置网址：https://ding-doc.dingtalk.com/doc#/serverapi2/qf2nxq
  dingding:
    secret:
    url:

ip:
  db:
    path: E:\MyProjects\ip2region\data\ip2region.db

#腾讯云短信发送配置
tencent:
  phone:
    appid: '1400220962' #短信应用SDK AppID
    appkey: 'adcf518b6d27f52c0f3cfe93e742f31e' #短信应用SDK AppKey
    templateId: '355578' #短信模板ID
    smsSign: ''  #签名

#swagger配置 https://github.com/SpringForAll/spring-boot-starter-swagger
swagger:
  enabled: true #swagger开关，建议生产环境关闭
  base-package: 'com.base.controller' #指定swagger扫描包
  base-path: '/**'
  title: '基础API'
  description: 'BaseApi'
  version: '1.0'
  license: 'Apache License, Version 2.0' #许可证
  licenseUrl: 'https://www.apache.org/licenses/LICENSE-2.0.html' #许可证URL
  termsOfServiceUrl: 'https://github.com/dyc87112/spring-boot-starter-swagger' #服务条款URL
  contact:
    name: 'zhangwei'
    url: 'https://blog.csdn.net/jav_zhangwei'
    email: '80616059@qq.com'
  authorization:
    # 鉴权策略ID，对应 SecurityReferences ID
    name: 'Authorization'
    # 鉴权策略，可选 ApiKey | BasicAuth | None，默认ApiKey
    type: 'ApiKey'
    # 鉴权传递的Header参数
    key-name: 'token'
    # 需要开启鉴权URL的正则, 默认^.*$匹配所有URL
    auth-regex: '^.*$'


druid:
  manager:
    username: 'admin'
    password: '123456'

#mybatis plus
mybatis-plus:
  mapper-locations: classpath:mapper/**/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.base.entity.po
  check-config-location: true
  configuration:
    #是否开启自动驼峰命名规则（camel case）映射
    map-underscore-to-camel-case: true
    #全局地开启或关闭配置文件中的所有映射器已经配置的任何缓存
    cache-enabled: false
    call-setters-on-nulls: true
    #配置JdbcTypeForNull, oracle数据库必须配置
    jdbc-type-for-null: 'null'
    #MyBatis 自动映射时未知列或未知属性处理策略 NONE：不做任何处理 (默认值), WARNING：以日志的形式打印相关警告信息, FAILING：当作映射失败处理，并抛出异常和详细信息
    auto-mapping-unknown-column-behavior: warning
  global-config:
    banner: false
    db-config:
      #主键类型  0:"数据库ID自增", 1:"未设置主键类型",2:"用户输入ID (该类型可以通过自己注册自动填充插件进行填充)", 3:"全局唯一ID (idWorker), 4:全局唯一ID (UUID), 5:字符串全局唯一ID (idWorker 的字符串表示)";
      id-type: UUID
      #字段验证策略 IGNORED:"忽略判断", NOT_NULL:"非NULL判断", NOT_EMPTY:"非空判断", DEFAULT 默认的,一般只用于注解里(1. 在全局里代表 NOT_NULL,2. 在注解里代表 跟随全局)
      field-strategy: NOT_EMPTY
      #数据库大写下划线转换
      capital-mode: true
      #逻辑删除值
      logic-delete-value: 1
      #逻辑未删除值
      logic-not-delete-value: 0

# 数据源配置
spring:
  redis:
    #    database: 0 #Redis数据库索引（默认为0）
    host: 127.0.0.1 # Redis服务器地址
    port: 6379 # Redis服务器连接端口
    password: 80616059 # Redis服务器连接密码（默认为空）
    timeout: 5000 # 连接超时时间（毫秒）
    jedis:
      pool:
        max-active: 10 # 连接池中的最小空闲连接
        max-wait: 6s # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 20 # 连接池中的最大空闲连接
        min-idle: 0 # 最大活跃连接数，负数为不限制
  autoconfigure:
    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure  # 为了某些版本的springboot  @SpringBootApplication(exclude= {DataSourceAutoConfiguration.class}) 无法生效
  datasource:
    druid:
      stat-view-servlet:
        loginUsername: admin
        loginPassword: 123456
    dynamic:
      primary: master #设置默认的数据源或者数据源组,默认值即为master，如果读者只是单数据源只需要注释掉slave相关配置即可，这里为了方便演示master与slave保持相同
      datasource:
        master:
          url: jdbc:mysql://127.0.0.1:3306/BaseDemo?useSSL=false&useUnicode=true&characterEncoding=utf8
          username: root
          password: 80616059
          driverClassName:  com.mysql.jdbc.Driver
        slave:
          url: jdbc:mysql://localhost:3306/BaseDemo?useSSL=false&useUnicode=true&characterEncoding=utf8
          username: root
          password: 80616059
          driverClassName:  com.mysql.jdbc.Driver
      initial-size: 10 # 以下是连接池配置
      max-active: 100
      min-idle: 10
      max-wait: 60000
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      #validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: false
        wall:
          config:
            multi-statement-allow: true
    #配置邮件发送
    mail:
      host: "smtp.qq.com"
      username: "javaserve@qq.com"
      password: "itkefyhhytaojfba"
      default-encoding: "utf-8"
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 50MB
